{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed: false\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        //state.totalQuantity = action.payload.totalQuantity;\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    replaceCart(state, action) {\n      if (state.totalQuantity === 0) {\n        state.totalQuantity = 1;\n      }\n\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n\n    removeItemFromCart(state, action) {\n      const itemId = action.payload;\n      console.log(itemId);\n      const existingItem = state.items.find(item => item.id === itemId);\n      state.totalQuantity--;\n      state.changed = true;\n\n      if (existingItem.quantity === 1) {\n        // state.items.splice(existingItem, 1);\n        state.items = state.items.filter(item => item.id !== itemId);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","changed","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","replaceCart","removeItemFromCart","itemId","console","log","filter","cartActions","actions"],"sources":["D:/Redux Practise Project/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    changed: false,\r\n  },\r\n  reducers: {\r\n\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      state.changed = true;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        //state.totalQuantity = action.payload.totalQuantity;\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n\r\n    replaceCart(state, action) {\r\n      if(state.totalQuantity === 0)\r\n      {\r\n        state.totalQuantity = 1;\r\n      }\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n\r\n    removeItemFromCart(state, action) {\r\n      const itemId = action.payload;\r\n      console.log(itemId);\r\n      const existingItem = state.items.find((item) => item.id === itemId);\r\n      state.totalQuantity--;\r\n      state.changed = true;\r\n      if (existingItem.quantity === 1) {\r\n        // state.items.splice(existingItem, 1);\r\n        state.items = state.items.filter((item) => item.id !== itemId);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE;IACZC,KAAK,EAAE,EADK;IAEZC,aAAa,EAAE,CAFH;IAGZC,OAAO,EAAE;EAHG,CAFc;EAO5BC,QAAQ,EAAE;IAERC,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;MAC3B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACL,KAAN,CAAYU,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAArB;MACAP,KAAK,CAACJ,aAAN;MACAI,KAAK,CAACH,OAAN,GAAgB,IAAhB;;MACA,IAAI,CAACO,YAAL,EAAmB;QACjBJ,KAAK,CAACL,KAAN,CAAYa,IAAZ,CAAiB;UACfD,EAAE,EAAEL,OAAO,CAACK,EADG;UAEfE,KAAK,EAAEP,OAAO,CAACO,KAFA;UAGfC,QAAQ,EAAE,CAHK;UAIfC,UAAU,EAAET,OAAO,CAACO,KAJL;UAKfhB,IAAI,EAAES,OAAO,CAACU;QALC,CAAjB;MAOD,CARD,MAQO;QACL;QACAR,YAAY,CAACM,QAAb;QACAN,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BT,OAAO,CAACO,KAA5D;MACD;IACF,CApBO;;IAsBRI,WAAW,CAACb,KAAD,EAAQC,MAAR,EAAgB;MACzB,IAAGD,KAAK,CAACJ,aAAN,KAAwB,CAA3B,EACA;QACEI,KAAK,CAACJ,aAAN,GAAsB,CAAtB;MACD;;MACDI,KAAK,CAACJ,aAAN,GAAsBK,MAAM,CAACE,OAAP,CAAeP,aAArC;MACAI,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACE,OAAP,CAAeR,KAA7B;IACD,CA7BO;;IA+BRmB,kBAAkB,CAACd,KAAD,EAAQC,MAAR,EAAgB;MAChC,MAAMc,MAAM,GAAGd,MAAM,CAACE,OAAtB;MACAa,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACA,MAAMX,YAAY,GAAGJ,KAAK,CAACL,KAAN,CAAYU,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYQ,MAAvC,CAArB;MACAf,KAAK,CAACJ,aAAN;MACAI,KAAK,CAACH,OAAN,GAAgB,IAAhB;;MACA,IAAIO,YAAY,CAACM,QAAb,KAA0B,CAA9B,EAAiC;QAC/B;QACAV,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYuB,MAAZ,CAAoBZ,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYQ,MAAzC,CAAd;MACD,CAHD,MAGO;QACLX,YAAY,CAACM,QAAb;QACAN,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACK,KAAjE;MACD;IACF;;EA5CO;AAPkB,CAAD,CAA7B;AAuDA,OAAO,MAAMU,WAAW,GAAG3B,SAAS,CAAC4B,OAA9B;AACP,eAAe5B,SAAf"},"metadata":{},"sourceType":"module"}