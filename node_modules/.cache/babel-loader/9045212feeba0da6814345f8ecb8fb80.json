{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { useDispatch } from 'redux-react';\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const itemId = action.payload;\n      console.log(itemId);\n      const existingItem = state.items.find(item => item.id === itemId);\n      console.log(existingItem);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        // state.items.splice(existingItem, 1);\n        state.items = state.items.filter(item => item.id !== itemId);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\n\nconst sendCartData = async () => {\n  return cartData = dispatch(uiSliceActions.showNotification({\n    status: \"pending\",\n    title: \"sending data...\",\n    message: \"sending cart data\"\n  }));\n};\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","useDispatch","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","itemId","console","log","filter","sendCartData","cartData","dispatch","uiSliceActions","showNotification","status","message","cartActions","actions"],"sources":["D:/Redux Practise Project/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {useDispatch } from 'redux-react';\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n  },\r\n  reducers: {\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItemFromCart(state, action) {\r\n      const itemId = action.payload;\r\n      console.log(itemId);\r\n      const existingItem = state.items.find((item) => item.id === itemId);\r\n      console.log(existingItem);\r\n      state.totalQuantity--;\r\n      if (existingItem.quantity === 1) {\r\n        // state.items.splice(existingItem, 1);\r\n        state.items = state.items.filter((item) => item.id !== itemId);\r\n      } else {\r\n        existingItem.quantity--;\r\n       existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst sendCartData = async () => {\r\n return  cartData = dispatch(\r\n    uiSliceActions.showNotification({\r\n      status: \"pending\",\r\n      title: \"sending data...\",\r\n      message: \"sending cart data\",\r\n    })\r\n  );\r\n\r\n\r\n}\r\n\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAAQC,WAAR,QAA2B,aAA3B;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE;IACZC,KAAK,EAAE,EADK;IAEZC,aAAa,EAAE;EAFH,CAFc;EAM5BC,QAAQ,EAAE;IACRC,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;MAC3B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAArB;MACAP,KAAK,CAACH,aAAN;;MACA,IAAI,CAACO,YAAL,EAAmB;QACjBJ,KAAK,CAACJ,KAAN,CAAYY,IAAZ,CAAiB;UACfD,EAAE,EAAEL,OAAO,CAACK,EADG;UAEfE,KAAK,EAAEP,OAAO,CAACO,KAFA;UAGfC,QAAQ,EAAE,CAHK;UAIfC,UAAU,EAAET,OAAO,CAACO,KAJL;UAKff,IAAI,EAAEQ,OAAO,CAACU;QALC,CAAjB;MAOD,CARD,MAQO;QACLR,YAAY,CAACM,QAAb;QACAN,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BT,OAAO,CAACO,KAA5D;MACD;IACF,CAjBO;;IAkBRI,kBAAkB,CAACb,KAAD,EAAQC,MAAR,EAAgB;MAChC,MAAMa,MAAM,GAAGb,MAAM,CAACE,OAAtB;MACAY,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACA,MAAMV,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYO,MAAvC,CAArB;MACAC,OAAO,CAACC,GAAR,CAAYZ,YAAZ;MACAJ,KAAK,CAACH,aAAN;;MACA,IAAIO,YAAY,CAACM,QAAb,KAA0B,CAA9B,EAAiC;QAC/B;QACAV,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYqB,MAAZ,CAAoBX,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYO,MAAzC,CAAd;MACD,CAHD,MAGO;QACLV,YAAY,CAACM,QAAb;QACDN,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACK,KAAjE;MACA;IACF;;EA/BO;AANkB,CAAD,CAA7B;;AAyCA,MAAMS,YAAY,GAAG,YAAY;EAChC,OAAQC,QAAQ,GAAGC,QAAQ,CACxBC,cAAc,CAACC,gBAAf,CAAgC;IAC9BC,MAAM,EAAE,SADsB;IAE9BX,KAAK,EAAE,iBAFuB;IAG9BY,OAAO,EAAE;EAHqB,CAAhC,CADwB,CAA3B;AASA,CAVD;;AAaA,OAAO,MAAMC,WAAW,GAAGhC,SAAS,CAACiC,OAA9B;AACP,eAAejC,SAAf"},"metadata":{},"sourceType":"module"}