{"ast":null,"code":"var _jsxFileName = \"D:\\\\Redux Practise Project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { uiSliceActions } from \"./store/ui-slice\";\nimport Notification from \"./components/UI/Notification\";\nimport { Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\n\nfunction App() {\n  _s();\n\n  const cartIsVisible = useSelector(state => state.ui.cartVisible);\n  const cart = useSelector(state => state.cart);\n  const notifications = useSelector(state => state.ui.Notification);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiSliceActions.showNotification({\n        status: \"pending\",\n        title: \"sending data...\",\n        message: \"sending cart data\"\n      }));\n      const response = await fetch(\"https://request-bb071-default-rtdb.firebaseio.com//cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed\");\n      } // const responseData = await response.json();\n\n\n      dispatch(uiSliceActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sent cart data successfully\"\n      }));\n    };\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    sendCartData().catch(error => {\n      dispatch(uiSliceActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending Cart data failed\"\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notifications && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notifications.status,\n      title: notifications.title,\n      message: notifications.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [cartIsVisible && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ayNPVrtvJTV+Jbws8AR+seuzZWM=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","Cart","Layout","Products","useSelector","useDispatch","uiSliceActions","Notification","Fragment","isInitial","App","cartIsVisible","state","ui","cartVisible","cart","notifications","dispatch","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","catch","error"],"sources":["D:/Redux Practise Project/src/App.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { uiSliceActions } from \"./store/ui-slice\";\nimport Notification from \"./components/UI/Notification\";\nimport { Fragment } from \"react\";\n\nlet isInitial = true;\n\nfunction App() {\n  const cartIsVisible = useSelector((state) => state.ui.cartVisible);\n  const cart = useSelector((state) => state.cart);\n  const notifications = useSelector((state) => state.ui.Notification);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(\n        uiSliceActions.showNotification({\n          status: \"pending\",\n          title: \"sending data...\",\n          message: \"sending cart data\",\n        })\n      );\n\n      const response = await fetch(\n        \"https://request-bb071-default-rtdb.firebaseio.com//cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed\");\n      }\n\n      // const responseData = await response.json();\n      dispatch(\n        uiSliceActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Sent cart data successfully\",\n        })\n      );\n    };\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    sendCartData().catch((error) => {\n      dispatch(\n        uiSliceActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sending Cart data failed\",\n        })\n      );\n    });\n  }, [cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notifications && (\n        <Notification\n          status={notifications.status}\n          title={notifications.title}\n          message={notifications.message}\n        />\n      )}\n      <Layout>\n        {cartIsVisible && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAIC,SAAS,GAAG,IAAhB;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,aAAa,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,EAAN,CAASC,WAArB,CAAjC;EACA,MAAMC,IAAI,GAAGX,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAxB;EACA,MAAMC,aAAa,GAAGZ,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,EAAN,CAASN,YAArB,CAAjC;EACA,MAAMU,QAAQ,GAAGZ,WAAW,EAA5B;EAEAL,SAAS,CAAC,MAAM;IACd,MAAMkB,YAAY,GAAG,YAAY;MAC/BD,QAAQ,CACNX,cAAc,CAACa,gBAAf,CAAgC;QAC9BC,MAAM,EAAE,SADsB;QAE9BC,KAAK,EAAE,iBAFuB;QAG9BC,OAAO,EAAE;MAHqB,CAAhC,CADM,CAAR;MAQA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,8DAD0B,EAE1B;QACEC,MAAM,EAAE,KADV;QAEEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,IAAf;MAFR,CAF0B,CAA5B;;MAOA,IAAI,CAACQ,QAAQ,CAACM,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;MACD,CAlB8B,CAoB/B;;;MACAb,QAAQ,CACNX,cAAc,CAACa,gBAAf,CAAgC;QAC9BC,MAAM,EAAE,SADsB;QAE9BC,KAAK,EAAE,UAFuB;QAG9BC,OAAO,EAAE;MAHqB,CAAhC,CADM,CAAR;IAOD,CA5BD;;IA8BA,IAAIb,SAAJ,EAAe;MACbA,SAAS,GAAG,KAAZ;MACA;IACD;;IAEDS,YAAY,GAAGa,KAAf,CAAsBC,KAAD,IAAW;MAC9Bf,QAAQ,CACNX,cAAc,CAACa,gBAAf,CAAgC;QAC9BC,MAAM,EAAE,OADsB;QAE9BC,KAAK,EAAE,QAFuB;QAG9BC,OAAO,EAAE;MAHqB,CAAhC,CADM,CAAR;IAOD,CARD;EASD,CA7CQ,EA6CN,CAACP,IAAD,EAAOE,QAAP,CA7CM,CAAT;EA+CA,oBACE,QAAC,QAAD;IAAA,WACGD,aAAa,iBACZ,QAAC,YAAD;MACE,MAAM,EAAEA,aAAa,CAACI,MADxB;MAEE,KAAK,EAAEJ,aAAa,CAACK,KAFvB;MAGE,OAAO,EAAEL,aAAa,CAACM;IAHzB;MAAA;MAAA;MAAA;IAAA,QAFJ,eAQE,QAAC,MAAD;MAAA,WACGX,aAAa,iBAAI,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA,QADpB,eAEE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GApEQD,G;UACeN,W,EACTA,W,EACSA,W,EACLC,W;;;KAJVK,G;AAsET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}